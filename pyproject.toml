[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[project]
name = "featurecraft"
version = "0.1.0"
description = "Automatic feature engineering, insights, and sklearn pipelines for tabular ML with optional time-series support."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
{ name = "FeatureCraft Authors", email = "maintainers@featurecraft.dev" }
]
keywords = ["feature engineering", "machine learning", "sklearn", "tabular", "time series", "auto"]
classifiers = [
"Programming Language :: Python :: 3",
"License :: OSI Approved :: MIT License",
"Operating System :: OS Independent",
"Development Status :: 3 - Alpha",
"Intended Audience :: Science/Research",
"Intended Audience :: Developers",
"Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
"numpy>=1.23",
"pandas>=1.5",
"scikit-learn>=1.3",
"scipy>=1.10",
"matplotlib>=3.7",
"jinja2>=3.1",
"typer>=0.9",
"pydantic>=2.5",
"rich>=13.3",
"joblib>=1.3"
]

[project.optional-dependencies]
ai = [
"openai>=1.0",
"anthropic>=0.18",
"tiktoken>=0.5"
]
extras = [
"category-encoders>=2.6",
"imbalanced-learn>=0.10",
"shap>=0.44"
]
schema = [
"pandera>=0.17"
]
dev = [
"pytest>=7.4",
"pytest-cov>=4.1",
"ruff>=0.1.0",
"black>=23.0",
"mypy>=1.5",
"build>=1.0",
"twine>=4.0",
"hypothesis>=6.82"
]
all = [
"featurecraft[ai,extras,schema,dev]"
]

[project.urls]
Homepage = "https://github.com/featurecraft/featurecraft"
Repository = "https://github.com/featurecraft/featurecraft"
Issues = "https://github.com/featurecraft/featurecraft/issues"
Documentation = "https://github.com/featurecraft/featurecraft/blob/main/docs/quickstart.md"

[project.scripts]
featurecraft = "featurecraft.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/featurecraft"]

[tool.hatch.build.targets.sdist]
include = [
    "src/featurecraft",
    "templates",
    "README.md",
    "LICENSE",
]

[tool.hatch.build.targets.wheel.force-include]
"templates" = "featurecraft/templates"

[tool.black]
line-length = 100
target-version = ["py39"]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "C4", "SIM", "N", "PL", "RUF"]
ignore = ["E501", "N803", "N806"]  # Allow X, y naming convention in ML code

[tool.pytest.ini_options]
addopts = "-q --tb=short"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["sklearn.*", "scipy.*", "matplotlib.*", "jinja2.*"]
ignore_missing_imports = true

